openapi: 3.0.0
info:
  title: Korper
  description: make 3D model from video
  version: 0.0.1
  contact:
    name: API support
    url: gyrms9412@naver.com
    email: gyrms9412@naver.com
  license:
    name: MIT
    url: 'https://en.wikipedia.org/wiki/MIT_License'
servers:
  - url: 'https://16rm2ha8n4.execute-api.ap-northeast-2.amazonaws.com'
paths:
  /signin/apple:
    post:
      summary: signin/apple
      description: Apple 회원가입 / 로그인을 처리한다.
      operationId: signin/apple/post
      tags:
        - signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identityToken:
                  type: string
                  description: apple server에서 발급한 identityToken
                fullName:
                  type: string
                  description: apple에서 첫 로그인 시도시 1회만 제공하는 사용자의 전체 이름
                signupFlag:
                  type: boolean
                  description: 회원가입 요청시 포함
                marketingAgreed:
                  type: boolean
                  description: 회원가입 요청시 포함
              required:
                - identityToken
              additionalProperties: false
      responses:
        '200':
          description: |
            ### 로그인 요청 
              - 미가입 유저 : code: Require_Signup 전달 
              - 가입 유저 : code: Success + 인증 토큰 전달  
            ### 회원가입 요청 
              - signupFlag: true + marketingAgreed: boolean 으로 요청시 \
                code: Success + 인증 토큰 전달
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        description: Success
                      message:
                        type: string
                        description: success
                      result:
                        type: object
                        properties:
                          accessToken:
                            type: string
                            description: access token(60분)
                          refreshToken:
                            type: string
                            description: refresh token(180일)
                  - type: object
                    properties:
                      code:
                        type: string
                        description: Require_Signup
                      message:
                        type: string
                        description: Require Signup
                      result:
                        type: object
                        properties:
                          accessToken:
                            type: string
                            description: 'null'
                          refreshToken:
                            type: string
                            description: 'null'
        '401':
          description: 'code: Verification_Failed'
      parameters: []

  /signin/naver:
    post:
      summary: signin/naver
      description: Naver 회원가입 / 로그인을 처리한다.
      operationId: signin/naver/post
      tags:
        - signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: naver에서 발급한 code
                signupFlag:
                  type: boolean
                  description: 회원가입 요청시 포함
                marketingAgreed:
                  type: boolean
                  description: 회원가입 요청시 포함
              required:
                - code
              additionalProperties: false
      responses:
        '200':
          description: |
            ### 로그인 요청 
              - 미가입 유저 : code: Require_Signup 전달 
              - 가입 유저 : code: Success + 인증 토큰 전달  
            ### 회원가입 요청 
              - signupFlag: true + marketingAgreed: boolean 으로 요청시 \
                code: Success + 인증 토큰 전달
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        description: Success
                      message:
                        type: string
                        description: success
                      result:
                        type: object
                        properties:
                          accessToken:
                            type: string
                            description: access token(60분)
                          refreshToken:
                            type: string
                            description: refresh token(180일)
                  - type: object
                    properties:
                      code:
                        type: string
                        description: Require_Signup
                      message:
                        type: string
                        description: Require Signup
                      result:
                        type: object
                        properties:
                          accessToken:
                            type: string
                            description: 'null'
                          refreshToken:
                            type: string
                            description: 'null'
        '401':
          description: 'code: Verification_Failed'
      parameters: []

  /signin/kakao:
    post:
      summary: signin/kakao
      description: Kakao 회원가입 / 로그인을 처리한다.
      operationId: signin/kakao/post
      tags:
        - signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: kakao에서 발급한 code
                signupFlag:
                  type: boolean
                  description: 회원가입 요청시 포함
                marketingAgreed:
                  type: boolean
                  description: 회원가입 요청시 포함
              required:
                - code
              additionalProperties: false
      responses:
        '200':
          description: |
            ### 로그인 요청 
              - 미가입 유저 : code: Require_Signup 전달 
              - 가입 유저 : code: Success + 인증 토큰 전달  
            ### 회원가입 요청 
              - signupFlag: true + marketingAgreed: boolean 으로 요청시 \
                code: Success + 인증 토큰 전달
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        description: Success
                      message:
                        type: string
                        description: success
                      result:
                        type: object
                        properties:
                          accessToken:
                            type: string
                            description: access token(60분)
                          refreshToken:
                            type: string
                            description: refresh token(180일)
                  - type: object
                    properties:
                      code:
                        type: string
                        description: Require_Signup
                      message:
                        type: string
                        description: Require Signup
                      result:
                        type: object
                        properties:
                          accessToken:
                            type: string
                            description: 'null'
                          refreshToken:
                            type: string
                            description: 'null'
        '401':
          description: 'code: Verification_Failed'
      parameters: []

  /signin/google:
    post:
      summary: signin/google
      description: Google 회원가입 / 로그인을 처리한다.
      operationId: signin/google/post
      tags:
        - signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
                  description: google에서 발급한 idToken
                signupFlag:
                  type: boolean
                  description: 회원가입 요청시 포함
                marketingAgreed:
                  type: boolean
                  description: 회원가입 요청시 포함
              required:
                - idToken
              additionalProperties: false
      responses:
        '200':
          description: |
            ### 로그인 요청 
              - 미가입 유저 : code: Require_Signup 전달 
              - 가입 유저 : code: Success + 인증 토큰 전달  
            ### 회원가입 요청 
              - signupFlag: true + marketingAgreed: boolean 으로 요청시 \
                code: Success + 인증 토큰 전달
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      code:
                        type: string
                        description: Success
                      message:
                        type: string
                        description: success
                      result:
                        type: object
                        properties:
                          accessToken:
                            type: string
                            description: access token(60분)
                          refreshToken:
                            type: string
                            description: refresh token(180일)
                  - type: object
                    properties:
                      code:
                        type: string
                        description: Require_Signup
                      message:
                        type: string
                        description: Require Signup
                      result:
                        type: object
                        properties:
                          accessToken:
                            type: string
                            description: 'null'
                          refreshToken:
                            type: string
                            description: 'null'
        '401':
          description: 'code: Verification_Failed'
      parameters: []

  /token/access:
    get:
      summary: token/access
      description: refresh token으로 access token을 재발급한다.
      operationId: token/access/get
      tags:
        - token
      parameters:
        - name: refreshToken
          in: query
          description: login 시 발급한 refresh token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  result:
                    type: object
        '401':
          description: 'code: Invalid_Token'
        '404':
          description: 'code: User_Not_Found'

  /token/refresh:
    delete:
      summary: token/refresh
      description: 유저의 refresh token을 삭제한다.(로그아웃)
      operationId: token/refresh/delete
      tags:
        - token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  result:
                    type: string
      parameters: []

  /user:
    get:
      summary: user
      description: User 정보를 조회한다.
      operationId: user/get
      tags:
        - user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: |
            유저 데이터 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: Success
                  message:
                    type: string
                    description: success
                  result:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                              
    put:
      summary: user
      description: User 정보를 수정한다.
      operationId: user/put
      tags:
        - user
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                  description: 유저 이름 수정 요청시
                profileImage:
                  type: boolean
                  description: 프로필 이미지 수정 요청시
                marketingAgreed:
                  type: boolean
                  description: 마케팅 동의 여부 수정 요청시
      responses:
        '200':
          description: |
            - 수정된 유저 데이터 전달
            - 프로필 이미지 수정 요청시 업로드할 presigned url 전달
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: Success
                  message:
                    type: string
                    description: success
                  result:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      profileImageUrl:
                        type: string
                        nullable: true
                        description: 프로필 이미지를 업로드할 위치의 presigned url
    delete:
      summary: user
      description: accessToken의 claim을 참조해 User를 삭제한다.
      operationId: user/delete
      tags:
        - user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: |
            - 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: Success
                  message:
                    type: string
                    description: success
                  result:
                    type: object
                    description: empty object

  /model:
    get:
      summary: model
      description: Model 정보를 조회한다. 
      operationId: model/get
      tags:
        - model
      parameters:
        - name: uid
          in: query
          description: model unique id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            모델 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: Success
                  message:
                    type: string
                    description: success
                  result:
                    type: object
                    properties:
                      model:
                        $ref: '#/components/schemas/Model'
                              
    post:
      summary: model
      description: Model 데이터를 DB에 저장하고 파일을 업로드할 url을 발급해서 전달한다.
      operationId: model/post
      tags:
        - model
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                  nullable: true
                  description: 생성할 모델 이름
                metadata:
                  type: string
                  nullable: true
                  description: 생성할 모델 메타데이터(json string)
      responses:
        '200':
          description: |
            - 모델 생성 성공
            - model.thumbnailUrl, model.modelUrl에 업로드할 presigned url 전달
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: Success
                  message:
                    type: string
                    description: success
                  result:
                    type: object
                    properties:
                      model:
                        $ref: '#/components/schemas/Model'

    delete:
      summary: model
      description: 자기 소유의 모델을 삭제한다.
      operationId: model/delete
      tags:
        - model
      security:
        - bearerAuth: []
      parameters:
        - name: uid
          in: query
          description: model unique id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: |
            - 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: Success
                  message:
                    type: string
                    description: success
                  result:
                    type: object
                    description: empty object

  /model/list:
    get:
      summary: model/list
      description: User가 소유한 모든 Model 정보를 조회한다.
      operationId: model/list/get
      tags:
        - model
      security:
        - bearerAuth: []
      responses:
        '200':
          description: |
            - 모델 리스트 조회 성공
            - modelUrl은 null로 전달
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: Success
                  message:
                    type: string
                    description: success
                  result:
                    type: object
                    properties:
                      modelList:
                        type: array
                        items:
                          $ref: '#/components/schemas/Model'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:
        idx:
          type: integer
          description: 유저 unique index
        user_email:
          type: string
          description: 유저 이메일
        user_name:
          type: string
          description: 유저 이름
        register_type:
          type: string
          description: 소셜 로그인 타입
        registered_date:
          type: string
          description: 회원가입 날짜(YYYY-MM-DD)
        marketing_agreed:
          type: boolean
          description: 마케팅 동의 여부
        profileImageUrl:
          type: string
          nullable: true
          description: 프로필 이미지 presigned url (있는 경우)
    Model:
      type: object
      properties:
        idx:
          type: integer
          description: 모델 unique index
        uid:
          type: string
          description: 모델 unique id
        userIdx:
          type: integer
          description: 모델 소유자 unique index
        name:
          type: string
          description: 모델 이름
        metadata:
          type: string
          description: 모델 메타데이터(json string)
        createdDate:
          type: string
          description: 모델 생성 날짜(YYYY-MM-DD)
        thumbnailUrl:
          type: string
          nullable: true
          description: 썸네일 이미지 presigned url
        modelUrl:
          type: string
          nullable: true
          description: 모델 파일 presigned url
        